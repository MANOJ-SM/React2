react is js library , which is used for buliding user interfeces 
can be used even in the exisiting projects bcz its a library 

for buliding house ;
library is like : bricks,cement,bars
framework is ike : kitchen,hall,rooms

tailwind css is framework where we use builtin components to do required tasks 

why we need : with the vanila css its difficult to manage , as dom updation will be very slow 

used for buliding the single page web applications 

dom :  bowser converts html page to tree like struture this tree like strutre is called dom
        - dom is used to interact with browser using js 

ReactDom library : to coonect react and dom   (for making intraction possible in between)    
   

React Element :   React Elements are created using react.createElement and they are js obj  and this obj converted into html , before it goes into the dom 

bundlers : Bundlers in React are tools that package/bundles JavaScript files and other assets (like CSS, images, etc.) into a single file or a few files for easier deployment and faster loading in web applications. 

They help manage dependencies and optimize the code for production. Popular bundlers used in React projects include Webpack, Parcel, Vite and Rollup

1.cretes the deve server where the projects run 
2.lighting fast HMR(Hot Module Replacement) : update the changes in the code without reloading the page
3.Rich features : minification - removing extra spaces / console statements / comments
4.optimized build : code in production is optimized for faster loading and execution before going to production env 

-------------------------- to make my project production ready , i need to use bundlers   

npm - collection of huge packages 

why to make prj -> npm prj -- bcoz we can use npm pacakge inside our prj

 # to crete or make npm prj :  npm init 

-> package.json is created which  is the configration of npm prj ( how prj is configured - name,git repo,author)

 # devDependices ( packages required for prj)

npm install -D vite   // -D is for making pacakages fall in devdependices in package.json 

in package.json --

devdependenices - only required during dev phase

dependenices - only required during production phase


---------------

 # install react as npm package / insted of cdn links 

npm i react / i -> install
npm i react-dom                      --   to avoid cdn links to use react run this cmd's

# package-lock.json - it contains the detield info of all the packages( devDependencies/dependencies) installed in the project

ex: react pacakage also need some other packages to run so this nested packages are listed in package-lock.json

# node modules - it will see all the pkgs and dpndcs installed in the project , and it will reinstall all the pakgs and dpndcs if we run npm install again          // with the cmd -> npm install

no need to upload node modules in github, as it will be recreated in the local machine where we clone the repo

-------------------
to create a new react app using vite : npm create vite@latest

// JSX is file where we can write both the html and js together 

for that we need change the file extension of the file from .js to .jsx in both index.js and index.html(script src)



// const header1 = React.createElement("h1", {},"hello world by React");
// const root2 = ReactDOM.createRoot(document.getElementById("root2"));
// root2.render(header1);  


// JSX is a js js XML is a syntax extension for JavaScript. It allows you to write HTML in your JavaScript files. It is a syntax sugar for React.createElement() method. 


// const jsxHeader = <h1 id='heading" >this is from jsx file </h1>

// const rootHeader = ReactDOM.createRoot(document.getElementById("root"));
// rootHeader.render(jsxHeader);

to run any any npm pacakage we use npx - execute npm pckg 


creation of react app -> 

requirements :

# have index.html file in which script should be there with   ->
                        
                          <script type="module"  src="index.jsx"></script>

# have index.jsx file 

1.first we need to make prj,
2. instal react and reactdom packsges - to run react code -> npm i react and npm i react-dom
3..import the packages - 
                              import React from 'react';
                              import ReactDOM from 'react-dom/client';

4.then we need to install bunndler vite -> npm install -D vite
5.to run the npm pacakage  using vite - we use -> npx vite                                              

